version: '3.8'

services:
  # Development environment
  playwright-dev:
    build:
      context: .
      target: development
    container_name: playwright-dev
    volumes:
      - .:/app
      - ./reports:/app/reports
      - ./screenshots:/app/screenshots
      - playwright-cache:/ms-playwright
    environment:
      - PYTHONPATH=/app
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - CI=false
      - HEADLESS=true
    env_file:
      - .env
    command: bash -c "python -m pytest tests/ -v --headless --html=reports/report.html --json-report --json-report-file=reports/report.json"
    networks:
      - test-network

  # Production testing environment
  playwright-test:
    build:
      context: .
      target: production
    container_name: playwright-test
    volumes:
      - ./reports:/app/reports
      - ./screenshots:/app/screenshots
    environment:
      - PYTHONPATH=/app
      - CI=true
      - HEADLESS=true
      - TESTRAIL_ENABLED=true
    env_file:
      - .env
    command: python -m pytest tests/ -v --headless --maxfail=5
    networks:
      - test-network

  # Specific test suites
  upload-tests:
    build:
      context: .
      target: production
    container_name: upload-tests
    volumes:
      - ./reports:/app/reports
      - ./screenshots:/app/screenshots
    environment:
      - PYTHONPATH=/app
      - CI=true
      - HEADLESS=true
      - TESTRAIL_ENABLED=true
    env_file:
      - .env
    command: python -m pytest tests/e2e/payables/test_invoice_file_upload.py -v --headless
    networks:
      - test-network

  # Load testing with parallel execution
  parallel-tests:
    build:
      context: .
      target: development
    container_name: parallel-tests
    volumes:
      - ./reports:/app/reports
      - ./screenshots:/app/screenshots
    environment:
      - PYTHONPATH=/app
      - CI=true
      - HEADLESS=true
    env_file:
      - .env
    command: python -m pytest tests/ -v --headless -n auto --dist worksteal
    networks:
      - test-network

volumes:
  playwright-cache:
    driver: local

networks:
  test-network:
    driver: bridge 